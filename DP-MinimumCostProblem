import java.util.*;
public class Solution {
	public static int helperMinCostPath(int [][] cost ,int i,int j){
        int m=cost.length;
        int n=cost[0].length;
        if(i==m-1 && j==n-1){
            return cost[i][j];
        }
        if(i>=m || j>=n){
            return Integer.MAX_VALUE;
        }
        int ans1=helperMinCostPath(cost,i+1,j);
        int ans2=helperMinCostPath(cost,i,j+1);
        int ans3=helperMinCostPath(cost,i+1,j+1);
        int ans=Math.min(ans1,Math.min(ans2,ans3));
        return  cost[i][j]+ans;
    }
	public static int minCostPath(int[][] input) {
		int ans=helperMinCostPath(input,0,0);
        return ans;
	}
}
